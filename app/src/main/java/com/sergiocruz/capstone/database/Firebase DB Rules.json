{

  "rules": {
    // Only accessible to authenticated users
    ".validate": "auth != null",
    // User profiles are only readable/writable by the user who owns it
    "users": {
      "$UID": {
        ".read": "auth.uid == $UID",
        ".write": "auth.uid == $UID"
      }
    },
    // User travel history is only readable/writable by the user who owns it
    "user-travels": {
      "$UID": {
        ".read": "auth.uid == $UID",
        ".write": "auth.uid == $UID"
      }
    },
    //     // Posts can be read by anyone but only written by logged-in users.
    //     "posts": {
    //       ".read": true,
    //       ".write": "auth.uid != null",

    //       "$POSTID": {
    //         // UID must match logged in user and is fixed once set
    //         "uid": {
    //           ".validate": "(data.exists() && data.val() == newData.val()) || newData.val() == auth.uid"
    //         },

    //         // User can only update own stars
    //         "stars": {
    //           "$UID": {
    //               ".validate": "auth.uid == $UID"
    //           }
    //         }
    //       }
    //     },

    // User posts can be read by anyone but only written by the user that owns it,
    // and with a matching UID
    "user-posts": {
      ".read": true,
      "$UID": {
        "$POSTID": {
          ".write": "auth.uid == $UID",
          ".validate": "data.exists() || newData.child('uid').val() == auth.uid"
        }
      }
    },
    "travel-packs": {
      ".read": true,
      ".write": false
    },
    "user-bookings": {
      ".write": false,
      "$UID": {
        ".read": "auth.uid == $UID",
        ".write": "auth.uid == $UID && newData.exists()"
      }
    },
    // Comments can be read by anyone but only written by a logged in user
    "travel-pack-comments": {
      ".read": true,
      "$PACKID": {
        ".write": "auth.uid != null",
        "$COMMENTID": {
          "$UID": {
            // users can change its own comments only
            //".validate": "data.child('uid').val() == auth.uid"
            ".validate": "$UID == auth.uid && newData.exists()"
          }
        }
      }
    }
  }
}